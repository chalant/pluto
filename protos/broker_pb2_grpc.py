# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from protos import assets_pb2 as protos_dot_assets__pb2
from protos import broker_pb2 as protos_dot_broker__pb2
from protos import protocol_pb2 as protos_dot_protocol__pb2


class BrokerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PlaceOrders = channel.stream_stream(
        '/Broker/PlaceOrders',
        request_serializer=protos_dot_protocol__pb2.Order.SerializeToString,
        response_deserializer=protos_dot_protocol__pb2.Order.FromString,
        )
    self.CancelOrder = channel.unary_unary(
        '/Broker/CancelOrder',
        request_serializer=protos_dot_broker__pb2.CancelRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.CancelAllOrdersForAsset = channel.unary_unary(
        '/Broker/CancelAllOrdersForAsset',
        request_serializer=protos_dot_assets__pb2.Asset.SerializeToString,
        response_deserializer=protos_dot_broker__pb2.WarningMessage.FromString,
        )
    self.ExecuteCancelPolicy = channel.unary_unary(
        '/Broker/ExecuteCancelPolicy',
        request_serializer=protos_dot_broker__pb2.Event.SerializeToString,
        response_deserializer=protos_dot_broker__pb2.WarningMessage.FromString,
        )


class BrokerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PlaceOrders(self, request_iterator, context):
    """This is an interface that provides brokerage access to clients. It encapsulates
    methods for accessing performing trades. Each caller passes its credentials as metadata
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelOrder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelAllOrdersForAsset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteCancelPolicy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BrokerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PlaceOrders': grpc.stream_stream_rpc_method_handler(
          servicer.PlaceOrders,
          request_deserializer=protos_dot_protocol__pb2.Order.FromString,
          response_serializer=protos_dot_protocol__pb2.Order.SerializeToString,
      ),
      'CancelOrder': grpc.unary_unary_rpc_method_handler(
          servicer.CancelOrder,
          request_deserializer=protos_dot_broker__pb2.CancelRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'CancelAllOrdersForAsset': grpc.unary_unary_rpc_method_handler(
          servicer.CancelAllOrdersForAsset,
          request_deserializer=protos_dot_assets__pb2.Asset.FromString,
          response_serializer=protos_dot_broker__pb2.WarningMessage.SerializeToString,
      ),
      'ExecuteCancelPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteCancelPolicy,
          request_deserializer=protos_dot_broker__pb2.Event.FromString,
          response_serializer=protos_dot_broker__pb2.WarningMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Broker', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
