# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from protos import controller_pb2 as protos_dot_controller__pb2
from protos import interface_pb2 as protos_dot_interface__pb2


class GatewayStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/Gateway/Login',
        request_serializer=protos_dot_interface__pb2.LoginRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.LoginResponse.FromString,
        )
    self.Logout = channel.unary_unary(
        '/Gateway/Logout',
        request_serializer=protos_dot_interface__pb2.LogoutRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.LogoutResponse.FromString,
        )


class GatewayServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Logout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GatewayServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=protos_dot_interface__pb2.LoginRequest.FromString,
          response_serializer=protos_dot_interface__pb2.LoginResponse.SerializeToString,
      ),
      'Logout': grpc.unary_unary_rpc_method_handler(
          servicer.Logout,
          request_deserializer=protos_dot_interface__pb2.LogoutRequest.FromString,
          response_serializer=protos_dot_interface__pb2.LogoutResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Gateway', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class EditorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BackTest = channel.unary_stream(
        '/Editor/BackTest',
        request_serializer=protos_dot_interface__pb2.BackTestRequest.SerializeToString,
        response_deserializer=protos_dot_controller__pb2.PerformancePacket.FromString,
        )
    self.New = channel.unary_stream(
        '/Editor/New',
        request_serializer=protos_dot_interface__pb2.NewStrategyRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.Strategy.FromString,
        )
    self.Save = channel.unary_unary(
        '/Editor/Save',
        request_serializer=protos_dot_interface__pb2.SaveRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.SaveResponse.FromString,
        )
    self.Deploy = channel.unary_unary(
        '/Editor/Deploy',
        request_serializer=protos_dot_interface__pb2.DeployRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.DeploymentResponse.FromString,
        )
    self.StrategyList = channel.unary_stream(
        '/Editor/StrategyList',
        request_serializer=protos_dot_interface__pb2.StrategyFilter.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.StrategyResponse.FromString,
        )
    self.GetStrategy = channel.unary_stream(
        '/Editor/GetStrategy',
        request_serializer=protos_dot_interface__pb2.StrategyRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.Strategy.FromString,
        )


class EditorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BackTest(self, request, context):
    """for developing and editing strategies
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def New(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Save(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Deploy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StrategyList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStrategy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EditorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BackTest': grpc.unary_stream_rpc_method_handler(
          servicer.BackTest,
          request_deserializer=protos_dot_interface__pb2.BackTestRequest.FromString,
          response_serializer=protos_dot_controller__pb2.PerformancePacket.SerializeToString,
      ),
      'New': grpc.unary_stream_rpc_method_handler(
          servicer.New,
          request_deserializer=protos_dot_interface__pb2.NewStrategyRequest.FromString,
          response_serializer=protos_dot_interface__pb2.Strategy.SerializeToString,
      ),
      'Save': grpc.unary_unary_rpc_method_handler(
          servicer.Save,
          request_deserializer=protos_dot_interface__pb2.SaveRequest.FromString,
          response_serializer=protos_dot_interface__pb2.SaveResponse.SerializeToString,
      ),
      'Deploy': grpc.unary_unary_rpc_method_handler(
          servicer.Deploy,
          request_deserializer=protos_dot_interface__pb2.DeployRequest.FromString,
          response_serializer=protos_dot_interface__pb2.DeploymentResponse.SerializeToString,
      ),
      'StrategyList': grpc.unary_stream_rpc_method_handler(
          servicer.StrategyList,
          request_deserializer=protos_dot_interface__pb2.StrategyFilter.FromString,
          response_serializer=protos_dot_interface__pb2.StrategyResponse.SerializeToString,
      ),
      'GetStrategy': grpc.unary_stream_rpc_method_handler(
          servicer.GetStrategy,
          request_deserializer=protos_dot_interface__pb2.StrategyRequest.FromString,
          response_serializer=protos_dot_interface__pb2.Strategy.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Editor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MonitorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StrategyList = channel.unary_stream(
        '/Monitor/StrategyList',
        request_serializer=protos_dot_interface__pb2.StrategyRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.StrategyResponse.FromString,
        )
    self.InspectCode = channel.unary_unary(
        '/Monitor/InspectCode',
        request_serializer=protos_dot_interface__pb2.CodeInspectionRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.CodeInspectionResponse.FromString,
        )
    self.Stop = channel.unary_unary(
        '/Monitor/Stop',
        request_serializer=protos_dot_interface__pb2.StopRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.StopResponse.FromString,
        )
    self.Run = channel.unary_unary(
        '/Monitor/Run',
        request_serializer=protos_dot_interface__pb2.RunLiveRequest.SerializeToString,
        response_deserializer=protos_dot_interface__pb2.RunResponse.FromString,
        )
    self.Watch = channel.unary_stream(
        '/Monitor/Watch',
        request_serializer=protos_dot_interface__pb2.WatchRequest.SerializeToString,
        response_deserializer=protos_dot_controller__pb2.PerformancePacket.FromString,
        )


class MonitorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StrategyList(self, request, context):
    """for controlling and monitoring strategies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InspectCode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Run(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Watch(self, request, context):
    """watch a particular strategy performance stream.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MonitorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StrategyList': grpc.unary_stream_rpc_method_handler(
          servicer.StrategyList,
          request_deserializer=protos_dot_interface__pb2.StrategyRequest.FromString,
          response_serializer=protos_dot_interface__pb2.StrategyResponse.SerializeToString,
      ),
      'InspectCode': grpc.unary_unary_rpc_method_handler(
          servicer.InspectCode,
          request_deserializer=protos_dot_interface__pb2.CodeInspectionRequest.FromString,
          response_serializer=protos_dot_interface__pb2.CodeInspectionResponse.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=protos_dot_interface__pb2.StopRequest.FromString,
          response_serializer=protos_dot_interface__pb2.StopResponse.SerializeToString,
      ),
      'Run': grpc.unary_unary_rpc_method_handler(
          servicer.Run,
          request_deserializer=protos_dot_interface__pb2.RunLiveRequest.FromString,
          response_serializer=protos_dot_interface__pb2.RunResponse.SerializeToString,
      ),
      'Watch': grpc.unary_stream_rpc_method_handler(
          servicer.Watch,
          request_deserializer=protos_dot_interface__pb2.WatchRequest.FromString,
          response_serializer=protos_dot_controller__pb2.PerformancePacket.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Monitor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
