syntax = 'proto3';

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "protos/broker.proto";
import "protos/controller.proto";
import "protos/clock.proto";
import "protos/data.proto";

service Controllable {
    /*A service that is called by a controller*/
    rpc UpdateParameters (ParametersUpdateRequest) returns (google.protobuf.Empty);
    rpc Initialize (InitParams) returns (google.protobuf.Empty);
    rpc ClockUpdate (ClockEvent) returns (google.protobuf.Empty);
    //sends broker state
    rpc UpdateAccount (stream Chunk) returns (google.protobuf.Empty);
    rpc Stop (StopRequest) returns (google.protobuf.Empty);

    rpc Watch (google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc StopWatching (google.protobuf.Empty) returns (google.protobuf.Empty);
}

message InitParams {
    string id = 1;
    float capital = 2;
    float max_leverage = 3;
    google.protobuf.Timestamp start = 4;
    google.protobuf.Timestamp end = 5;
    string mode = 6;
}

message UpdateRequest {
    google.protobuf.Timestamp timestamp = 1;
    EventType event = 2;
    BrokerState broker_state = 3;
}

message UpdateReply {

}

message ControllableState {
    string session_id = 1;
    string session_state = 2;
    float capital = 3;
    float max_leverage = 11;
    string universe = 4;
    int32 look_back = 5;
    string data_frequency = 6;
    google.protobuf.Timestamp start = 7;
    google.protobuf.Timestamp end = 8;
    google.protobuf.Timestamp checkpoint = 9;
    bytes metrics_tracker_state = 10;
}