syntax = "proto3";

import "google/protobuf/empty.proto";

import "protos/data.proto";

service Gateway {
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Logout (LogoutRequest) returns (LogoutResponse);
}

service Manager {
    //for managing strategies: we can put a strategy into a live or a paper environment or both
    rpc InspectCode (CodeInspectionRequest) returns (CodeInspectionResponse);
    //locks a strategy so that it can't be modified or overwritten
    rpc Deploy(DeployRequest) returns (DeploymentResponse);
}

service Explorer {
    rpc StrategyList (StrategyFilter) returns (stream StrategyResponse);
    rpc UniverseList(UniverseListRequest) returns (stream UniverseListResponse);
    rpc SessionList(SessionListRequest) returns (stream SessionListResponse);
}

service Hub {
    //service for getting and updating the directory
    rpc GetDirectory(DirectoryRequest) returns (stream Chunk);
    rpc StoreDirectory(stream Chunk) returns (google.protobuf.Empty);
}

message SessionListRequest {

}

message SessionListResponse {

}

message UniverseListRequest {

}

message UniverseListResponse {
    string name = 1;
}

message DirectoryRequest {

}


message LogoutRequest {

}

message LogoutResponse {

}

message CodeInspectionRequest {
    string strategy_id = 1;
}

message CodeInspectionResponse {
    bytes strategy = 1;
}


message StrategyFilter {

}

message StrategyResponse {
    string strategy_id = 1;
    string name = 2;
    repeated StrategyStatus status = 3;
}

message StrategyStatus {
    bool running = 1;
}

message Strategy {
    string strategy_id = 1;
    string universe = 2;
    bytes strategy = 3;
}

message DeployRequest {
    //request deployment of a session.
    string session_id = 1;
}

message LoginRequest {
    string user_name = 1;
    bytes password = 2;
}

message LoginResponse {
    bytes token = 1;
}

message DeploymentResponse {
    enum Status {
        FAIL = 0;
        SUCCESS = 1;
    }
    Status status = 1;
    bytes details = 2;
}