syntax = "proto3";

import "google/protobuf/timestamp.proto";

enum WeekDays {
    MONDAY = 0;
    TUESDAY = 1;
    WEDNESDAY = 2;
    THURSDAY = 3;
    FRIDAY = 4;
    SATURDAY = 5;
    SUNDAY = 6;
}

message Offset {
    enum Types {
        MONDAY = 0;
        TUESDAY = 1;
        WEDNESDAY = 2;
        THURSDAY = 3;
        FRIDAY = 4;
        SATURDAY = 5;
        SUNDAY = 6;
        DAY = 7;
        EASTER = 8;
    }
    Types type = 1;
    int32 n = 2;
}

enum Observance {
    NEAREST_WORKDAY=0;
    NEXT_WORKDAY=1;
    PREVIOUS_WORKDAY=2;
    BEFORE_NEAREST_WORKDAY=3;
    AFTER_NEAREST_WORKDAY=4;
    WEEKEND_TO_MONDAY=5;
    SUNDAY_TO_MONDAY=6;
    PREVIOUS_FRIDAY=7;
    NEXT_MONDAY_OR_TUESDAY=8;
    NEXT_MONDAY=9;
}

message Holiday {
    string name = 1;
    google.protobuf.Timestamp year = 2;
    google.protobuf.Timestamp month = 3;
    google.protobuf.Timestamp day = 4;
    repeated Offset offset = 5;
    Observance observance = 6;
    google.protobuf.Timestamp start_date = 7;
    google.protobuf.Timestamp end_date = 8;
    repeated WeekDays days_of_week = 9;
}

message Time {
    int32 hour = 1;
    int32 minute = 2;
    int32 second = 3;
}

message TimeHolidays {
    Time time = 1;
    repeated Holiday holidays=2;
}

message TimeDates {
    Time time = 1;
    repeated google.protobuf.Timestamp dates = 2;
}

message Calendar {
    string name = 1;
    string timezone = 2;
    Time open_time = 3;
    Time close_time = 4;
    repeated Holiday regular_holidays = 5;
    repeated google.protobuf.Timestamp adhoc_holidays = 6;
    Time regular_early_close = 7;
    repeated TimeHolidays special_closes = 8;
    repeated TimeDates special_closes_adhoc = 9;
}